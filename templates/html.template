<%doc>
---BEGIN COPYRIGHT---
choproparser - A parser which reads ChordPro files and converts them
into different formats using templates.
Copyright (C) 2019  nomike <nomike@nomike.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
---END COPYRIGHT---

This template formats the first song in the songbook using plain and simple HTML
containing a link to a simple CSS file.
</%doc>
<% import choproparser.parser, hashlib %>
<!DOCTYPE html>
<html>
    <head>
        <title>${songbook.songs[0].metadata['title']}</title>
        <link rel="stylesheet" href="../templates/simple_html.css"/>
    </head>
    <body>
    <div class="toc">
% for song in songbook.songs:
        <p><a href="#${hashlib.sha256(song.__str__().encode('utf-8')).hexdigest()}">${song.metadata['title']}</a>
    </div>
% endfor    
% for song in songbook.songs:
    <div class="song">
        <a name="${hashlib.sha256(song.__str__().encode('utf-8')).hexdigest()}" />
        <h1>${song.metadata['title']}</h1>
    % if 'subtitle' in song.metadata:
        <p>${song.metadata['subtitle']}</p>
    % endif
    % for chord in song.get_chords():
<img src="chords/112x150/${chord}.png" alt="${chord}"</img>
    % endfor
    % for section in song.sections:
        % if section.name and len(section.name) > 0:
        <div class="section">
            <div class="section_header">${section.name}</div>
        % endif
        % for line in section.lines:
            % if isinstance(line, choproparser.parser.ChordTextLine):
            <div class="chord_text_line"><p>\
                % for chord_text in line.chord_texts:
<span data-chord="${chord_text.chord}">${"&nbsp;" if chord_text.text is "" else chord_text.text.replace(' ', '&nbsp;')}</span>\
                % endfor
</p></div>
            % elif isinstance(line, choproparser.parser.Comment):
                % if line.comment_type == '':
            <span class="comment">${line.text}</span>
                % elif line.comment_type == 'highlight':
            <div class="hightlight">${line.text}</div>
                % else:
            <div class="comment_${line.comment_type}">${line.text}</div>
                % endif
            % elif isinstance(line, choproparser.parser.HiddenComment):
            <!-- ${line.text} -->
            % elif isinstance(line, choproparser.parser.MetadataLine) and line.key not in ['title', 't']:
            <div class="metadata"><span class="key">${line.key}:</span> <span class="value">${line.value}</span> </div>
            % endif
        % endfor
        % if section.name and len(section.name) > 0:
            </div>
        % endif
    % endfor
        </div>
        </div>
% endfor
    </body>
</html>
