<%doc>
---BEGIN COPYRIGHT---
choproparser - A parser which reads ChordPro files and converts them
into different formats using templates.
Copyright (C) 2019  nomike <nomike@nomike.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
---END COPYRIGHT---

This template formats the songbook in LATEX.
</%doc>
<% import choproparser.parser %>
<%
numbersdict = {'0': 'zero',
                '1': 'one',
                '2': 'two',
                '3': 'three',
                '4': 'four',
                '5': 'five',
                '6': 'six',
                '7': 'seven',
                '8': 'eight',
                '9': 'nine',}
def escapechord(chord):
    return "".join([numbersdict[i] if i in numbersdict else i for i in chord]).lower().replace('#', 'sharp').replace('/', 'slash').replace('-', 'dash')
%>
\documentclass{report}
\usepackage{ifpdf}
\usepackage[chorded]{songs}
\usepackage{ukulelechords}

\newindex{mainindex}{idxfile}

\begin{document}
\songcolumns{1}

\title{nomike's ukulele songbook}
\author{nomike}
\date{2019}
\maketitle
\showindex[2]{Index of Song Titles}{mainindex}
\newpage

\songsection{Songs}

\begin{songs}{}
\beginsong{Imagine}[by={John Lennon}]
\chordcmaj \chordcmajseven \chordfmaj

\beginverse
Intro,  $\times$ 2

\[C] \[Cmaj7] \[F]
\[C]Imagine there's \[Cmaj7]no \[F]heaven
\[C]It's easy if \[Cmaj7]you \[F]try
\[C]No hell \[Cmaj7]below \[F]us
\[C]Above us \[Cmaj7]only \[F]sky
\endverse
\endsong
\newpage
% for song in songbook.songs:
<%doc>\chapter{${song.metadata['title']}\
    % if 'subtitle' in song.metadata:
 - ${song.metadata['subtitle']}\
    % endif
}</%doc>
\beginsong{${song.metadata['title']}}[\
% if 'subtitle' in song.metadata:
    by={${song.metadata['subtitle']}}\
% endif
]
    % for chord in song.get_chords():
\ifdefined\chord${escapechord(chord)}
\chord${escapechord(chord)}
\else
${chord.replace('#','\#')}
\fi
    % endfor

    % for section in song.sections:
        % if section.name.lower() == "chorus":
\beginchorus
        % else:
\beginverse
        % endif
        % if section.name and len(section.name) > 0:
begin_of_${section.name}
        % endif
        % for line in section.lines:
            % if isinstance(line, choproparser.parser.ChordTextLine):
                % for chord_text in line.chord_texts:
                    % if len(chord_text.chord) > 0:
\[${chord_text.chord}]\
                    % endif
${chord_text.text}\
                % endfor
${" "}
            % elif isinstance(line, choproparser.parser.Comment):
                % if line.comment_type == '':
comment: ${line.text}
                % elif line.comment_type == 'highlight':
highlight: ${line.text}
                % else:
comment_${line.comment_type}: ${line.text}
                % endif
            % elif isinstance(line, choproparser.parser.HiddenComment):
            % elif isinstance(line, choproparser.parser.MetadataLine) and line.key not in ['title', 't', 'subtitle', 'st']:
${line.key}: ${line.value}
            % endif
        % endfor
        % if section.name and len(section.name) > 0:
end_of_${section.name}
        % endif
        % if section.name.lower() == "chorus":
\endchorus
        % else:
\endverse
        % endif
    % endfor
\endsong
\newpage
% endfor
\end{songs}
\end{document}